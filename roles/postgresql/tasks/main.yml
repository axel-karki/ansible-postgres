- name: Install prerequisites
  apt:
    name:
      - curl
      - ca-certificates
      - sudo
      - python3-psycopg2
    state: present
    update_cache: yes

- name: Create pgdg directory for GPG key
  file:
    path: /usr/share/postgresql-common/pgdg
    state: directory
    mode: '0755'

- name: Download PostgreSQL GPG key
  get_url:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    dest: /usr/share/postgresql-common/pgdg/apt.postgresql.org.asc
    mode: '0644'

- name: Get OS version codename
  shell: . /etc/os-release && echo $VERSION_CODENAME
  register: os_codename
  changed_when: false

- name: Add PostgreSQL APT repository
  apt_repository:
    repo: "deb [signed-by=/usr/share/postgresql-common/pgdg/apt.postgresql.org.asc] https://apt.postgresql.org/pub/repos/apt {{ os_codename.stdout }}-pgdg main"
    state: present
    filename: 'pgdg'

- name: Update apt cache
  apt:
    update_cache: yes

- name: Install PostgreSQL
  apt:
    name:
      - postgresql-17
      - postgresql-contrib-17
    state: present

# Robust Cluster Cleanup for classic PostgreSQL "zombie cluster" issue
- name: Check if cluster config exists
  stat:
    path: "/etc/postgresql/17/main"
  register: cluster_config_dir

- name: Check if cluster data exists
  stat:
    path: "/var/lib/postgresql/17/main"
  register: cluster_data_dir

- name: Remove broken cluster config directory
  file:
    path: "/etc/postgresql/17/main"
    state: absent

- name: Remove broken cluster data directory
  file:
    path: "/var/lib/postgresql/17/main"
    state: absent

- name: Ensure PostgreSQL cluster is created (only if both config and data dirs are absent)
  command: "pg_createcluster 17 main --start"

- name: Wait for PostgreSQL socket to appear
  wait_for:
    path: "/var/run/postgresql/.s.PGSQL.5432"
    state: present
    timeout: 30

- name: Configure PostgreSQL settings
  template:
    src: postgresql.conf.j2
    dest: "/etc/postgresql/17/main/postgresql.conf"
  notify: Restart PostgreSQL

#- include_tasks: users.yml


#- name: Wait for PostgreSQL to start accepting connections
#  wait_for:
#    path: "/var/run/postgresql/.s.PGSQL.5432"
#    state: present
#    timeout: 30

# - name: Install PostgreSQL
#   apt:
#     name: "postgresql-{{ postgresql_version }}"
#     state: present
#     update_cache: yes

# - name: Ensure PostgreSQL is started and enabled
#   service:
#     name: postgresql
#     state: started
#     enabled: yes

# - name: Configure PostgreSQL settings
#   template:
#     src: postgresql.conf.j2
#     dest: "/etc/postgresql/{{ postgresql_version }}/main/postgresql.conf"
#   notify: Restart PostgreSQL
