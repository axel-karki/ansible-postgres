- name: Install prerequisites
  apt:
    name:
      - curl
      - ca-certificates
      - sudo
      - python3-psycopg2
    state: present
    update_cache: yes

- name: Create pgdg directory for GPG key
  file:
    path: /usr/share/postgresql-common/pgdg
    state: directory
    mode: '0755'

- name: Download PostgreSQL GPG key
  get_url:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    dest: /usr/share/postgresql-common/pgdg/apt.postgresql.org.asc
    mode: '0644'

- name: Get OS version codename
  shell: . /etc/os-release && echo $VERSION_CODENAME
  register: os_codename
  changed_when: false

- name: Add PostgreSQL APT repository
  apt_repository:
    repo: "deb [signed-by=/usr/share/postgresql-common/pgdg/apt.postgresql.org.asc] https://apt.postgresql.org/pub/repos/apt {{ os_codename.stdout }}-pgdg main"
    state: present
    filename: 'pgdg'

- name: Update apt cache
  apt:
    update_cache: yes

- name: Install PostgreSQL
  apt:
    name:
      - postgresql-17
      - postgresql-contrib-17
    state: present

- name: Ensure PostgreSQL is started and enabled
  service:
    name: postgresql
    state: started
    enabled: yes

- include_tasks: users.yml

- name: Configure PostgreSQL authentication for postgres user
  lineinfile:
    path: /etc/postgresql/17/main/pg_hba.conf
    regexp: '^local\s+all\s+postgres\s+peer'
    line: 'local   all             postgres                                md5'
    backup: yes

- name: Configure PostgreSQL authentication for all users
  lineinfile:
    path: /etc/postgresql/17/main/pg_hba.conf
    regexp: '^local\s+all\s+all\s+peer'
    line: 'local   all             all                                     md5'
    backup: yes

- name: Restart PostgreSQL to apply auth changes
  service:
    name: postgresql
    state: restarted

#- name: Configure PostgreSQL settings
#  template:
#    src: postgresql.conf.j2
#    dest: "/etc/postgresql/17/main/postgresql.conf"
#    mode: '0644'
#  notify: Restart PostgreSQL
